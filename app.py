import streamlit as st
import pandas as pd
import fitz  # PyMuPDF
import re

st.set_page_config(page_title="Analisador P√≥s-Solar", layout="centered")
st.title("‚òÄÔ∏è Analisador de Gera√ß√£o e Consumo - P√≥s Energia Solar")

st.markdown("Envie a fatura da Copel e o relat√≥rio de gera√ß√£o (XLS) para an√°lise do desempenho do sistema solar.")

# Uploads
faturas = st.file_uploader("üìÑ Enviar fatura (PDF):", type=["pdf"], accept_multiple_files=True)
geracoes = st.file_uploader("üìä Enviar gera√ß√£o (XLS):", type=["xls", "xlsx"], accept_multiple_files=True)

def extrair_texto_pdf(fatura):
    texto = ""
    with fitz.open(stream=fatura.read(), filetype="pdf") as doc:
        for page in doc:
            texto += page.get_text()
    return texto

# Verifica se o n√∫mero de arquivos bate
if faturas and geracoes and len(faturas) == len(geracoes):
    for fatura, geracao in zip(faturas, geracoes):
        st.markdown("---")
        st.subheader(f"üìÑ An√°lise: {fatura.name}")

        texto = extrair_texto_pdf(fatura)  # Aqui o PDF j√° √© lido corretamente!

        # Extrair dados via regex
        injecao_match = re.search(r"Injetada.*?(\d{3,6})\s*kWh", texto)
        consumo_match = re.search(r"Consumo.*?(\d{3,6})\s*kWh", texto)
        credito_match = re.search(r"Cr√©dito.*?dispon√≠vel.*?(\d{1,6})", texto)

        energia_injetada = int(injecao_match.group(1)) if injecao_match else 0
        energia_consumida = int(consumo_match.group(1)) if consumo_match else 0
        creditos = int(credito_match.group(1)) if credito_match else 0

        # === Ler XLS da gera√ß√£o ===
        try:
            df_geracao = pd.read_excel(geracao, skiprows=6, engine="xlrd")
        except:
            df_geracao = pd.read_excel(geracao, skiprows=6)  # fallback sem engine

        gerado_kwh = df_geracao.iloc[:, 1].sum()  # Coluna de gera√ß√£o

        # === Exibir Resultados ===
        st.subheader("üîé Resultados")
        st.write(f"üîã Gera√ß√£o total no m√™s: **{gerado_kwh:.2f} kWh**")
        st.write(f"‚ö° Consumo instant√¢neo (da rede): **{energia_consumida} kWh**")
        st.write(f"üîÅ Energia injetada na rede: **{energia_injetada} kWh**")
        st.write(f"üí≥ Cr√©ditos acumulados: **{creditos} kWh**")

        # Efici√™ncia de uso
        total_utilizado = energia_consumida + energia_injetada
        eficiencia = gerado_kwh / total_utilizado * 100 if total_utilizado > 0 else 0
        st.write(f"üìà Efici√™ncia de uso da gera√ß√£o: **{eficiencia:.1f}%**")

        # Sugest√µes
        st.subheader("üí° Sugest√µes")
        if creditos > 500:
            st.markdown("- ‚ö†Ô∏è Cr√©ditos acumulados altos: considere redimensionar o sistema.")
        if eficiencia < 70:
            st.markdown("- üßê Baixa efici√™ncia: verifique se est√° havendo perdas ou subutiliza√ß√£o.")
else:
    st.info("‚¨ÜÔ∏è Envie a mesma quantidade de faturas e relat√≥rios de gera√ß√£o.")
